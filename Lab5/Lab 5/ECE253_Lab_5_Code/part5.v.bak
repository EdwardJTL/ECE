module part5(CLOCK_50, HEX0, SW)
  input CLOCK_50;
  input SW[0];
  output [6:0] HEX0;

  wire reg [25:0] holder;
  wire reg [3:0] E;

  //50M is 10111110101111000010000000 in binary

  always @(CLOCK_50)
  begin
    if ((SW[0]==0) | (E == 4'b1010))
      E = 1'b0;
      holder = 26'b0;
    else if (holder == 26'b10111110101111000010000000)
      E <= E+1;
      holder = 26'b0;
    else
      holder <= holder+1;
  end

  binary_7seg h0(E, HEX0);

endmodule

module binary_7seg ( C, Display);
   input [3:0] C;
   output reg [6:0] Display;
   always @(C)
   case(C)
      4'h0:
        Display = 7'b0000001;
      4'h1:
        Display = 7'b1001111;
      4'h2:
        Display = 7'b0010010;
      4'h3:
        Display = 7'b0000110;
      4'h4:
        Display = 7'b1001100;
      4'h5:
        Display = 7'b0100100;
      4'h6:
        Display = 7'b0100000;
      4'h7:
        Display = 7'b0001111;
      4'h8:
        Display = 7'b0000000;
      4'h9:
        Display = 7'b0001100;
      4'hA:
        Display = 7'b0001000;
      4'hB:
        Display = 7'b1100000;
      4'hC:
        Display = 7'b1110010;
      4'hD:
        Display = 7'b1000010;
      4'hE:
        Display = 7'b0110000;
      4'hF:
        Display = 7'b0111000;
      default:
        Display = 7'b1111111;
   endcase
endmodule // binary_7seg
